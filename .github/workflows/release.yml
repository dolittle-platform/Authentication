name: Release

env:
  PRERELEASE_BRANCHES: alpha,beta,rc

on:
  pull_request:
    types: [closed]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.context.outputs.should-publish }}
      next-version: ${{ steps.increment-version.outputs.next-version }}
    steps:
    - uses: actions/checkout@v2
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}
    - name: Increment version
      id: increment-version
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ steps.context.outputs.current-version }}
        release-type: ${{ steps.context.outputs.release-type }}
    - name: Create GitHub Release
      uses: dolittle/github-release-action@v2
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
    
  release-pascal:
    name: Publish
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.should-publish == 'true'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push Production Image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        context: ./Source/Pascal
        file: ./Source/Pascal/Dockerfile
        tags: dolittle/pascal:${{ needs.setup.outputs.next-version }},dolittle/pascal:latest

  release-login:
    name: Publish
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.should-publish == 'true'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
        registry-url: 'https://registry.npmjs.org'
    - uses: actions/setup-go@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push Production Image to Docker Hub
      uses: docker/build-push-action@v2
      with:
        push: true
        context: ./Source/Login
        file: ./Source/Login/Dockerfile
        tags: dolittle/login:${{ needs.setup.outputs.next-version }},dolittle/login:latest
