apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-auth
  name: browser
data:
  hydra.yaml: |
    dsn: postgres://postgres:password@postgres.system-auth.svc.cluster.local:5432/hydra?sslmode=disable

    serve:
      public:
        port: 4444
      admin:
        port: 4445
    
    secrets:
      system:
        - DgCPtr3IlG0KFMBqHA7LQ4ixMSRqNHrA

    urls:
      self:
        issuer: http://local.dolittle.studio:8080/.auth/
        public: http://local.dolittle.studio:8080/.auth/
      
      login: http://local.dolittle.studio:8080/.auth/self-service/tenant/browser
      consent: http://local.dolittle.studio:8080/.auth/self-service/consent/browser

    log:
      level: debug
      format: text

  oathkeeper.yaml: |
    serve:
      proxy:
        port: 4455
    access_rules:
      repositories:
        - file:///etc/oathkeeper/config/rules.yaml

    errors:
      fallback:
        - json
      handlers:
        json:
          enabled: true
          config:
            verbose: true
        redirect:
          enabled: true
          config:
            to: http://local.dolittle.studio:8080/

    mutators:
      noop:
        enabled: true
      bearer:
        enabled: true
        config:
          token_from:
            file: "/var/run/secrets/kubernetes.io/serviceaccount/token"

    authorizers:
      allow:
        enabled: true

    authenticators:
      oauth2_introspection:
        enabled: true
        config:
          introspection_url: http://browser.system-auth.svc.cluster.local:4445/oauth2/introspect
          token_from:
            cookie: dolittle-token

    log:
      level: debug
      format: text

  rules.yaml: |
    - id: studio
      upstream:
        url: http://studio.studio.svc.cluster.local
      match:
        methods: ["GET"]
        url: http://local.dolittle.studio:8080/
      authenticators:
        - handler: oauth2_introspection
      authorizer:
        handler: allow
      mutators:
       - handler: noop
      errors:
        - handler: redirect
          config:
            to: http://local.dolittle.studio:8080/.auth/cookies/initiate
            return_to_query_param: return_to

  pascal.yaml: |
    serve:
      port: 8080

      paths:
        initiate: /.auth/cookies/initiate
        complete: /.auth/cookies/callback

    urls:
      error: http://local.dolittle.studio:8080/error
      return:
        query_parameter: return_to
        default: http://local.dolittle.studio:8080/
        allowed: []

    sessions:
      nonce_length: 80
      lifetime: 5m
      cookies:
        name: .dolittle.pascal.session
        secure: true
        samesite: lax
        path: /
      keys:
        - hash: KEY-USED-TO-SIGN-SESSION-COOKIES-SHOULD-BE-64-BYTES-LONG--------
          block: ENCRYPTION-KEY-SHOULD-BE-32-BYTS

    openid:
      issuer: http://local.dolittle.studio:8080/.auth/
      client:
        id: client-id
        secret: client-secret
      scopes:
        - openid
      redirect: http://local.dolittle.studio:8080/.auth/cookies/callback

    cookies:
      name: .dolittle.pascal.login
      secure: true
      samesite: lax
      path: /

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: system-auth
  name: browser

spec:
  replicas: 1
  selector:
    matchLabels:
      system: auth
      component: browser

  template:
    metadata:
      labels:
        system: auth
        component: browser
    spec:
      hostAliases:
        - ip: "192.168.65.2"
          hostnames:
            - "local.dolittle.studio"
      initContainers:
      - name: hydra-init
        image: oryd/hydra:v1.8.5
        args:
        - "--config"
        - "/etc/hydra/config/hydra.yaml"
        - "migrate"
        - "sql"
        - "-e"
        - "--yes"
        volumeMounts:
        - name: config
          mountPath: /etc/hydra/config
      containers:
      - name: hydra
        image: oryd/hydra:v1.8.5
        args:
        - "--config"
        - "/etc/hydra/config/hydra.yaml"
        - "serve"
        - "all"
        - "--dangerous-force-http"
        volumeMounts:
        - name: config
          mountPath: /etc/hydra/config
        ports:
        - name: hydra-public
          containerPort: 4444
        - name: hydra-admin
          containerPort: 4445
      - name: oathkeeper
        image: oryd/oathkeeper:dev
        args:
          - "--config"
          - "/etc/oathkeeper/config/oathkeeper.yaml"
          - "serve"
        env:
          - name: SSL_CERT_FILE
            value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        ports:
        - name: oath-proxy
          containerPort: 4455
        volumeMounts:
        - name: config
          mountPath: /etc/oathkeeper/config
      - name: pascal
        image: dolittle/pascal:1.0.0
        args:
          - "--config"
          - "/etc/pascal/config/pascal.yaml"
          - "serve"
        ports:
        - name: pascal
          containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/pascal/config
      volumes:
      - name: config
        configMap:
          name: browser

---
kind: Service
apiVersion: v1
metadata:
  namespace: system-auth
  name: browser
spec:
  selector:
    system: auth
    component: browser
  ports:
    - port: 4444
      name: hydra-public
      targetPort: hydra-public
    - port: 4445
      name: hydra-admin
      targetPort: hydra-admin
    - port: 4455
      name: oath-proxy
      targetPort: oath-proxy
    - port: 8080
      name: pascal
      targetPort: pascal

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: system-auth
  name: browser
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: local.dolittle.studio
    http:
      paths:
      - path: /(.*)
        backend:
          serviceName: browser
          servicePort: oath-proxy
      - path: /\.auth/(\.well-known.*)
        backend:
          serviceName: browser
          servicePort: hydra-public
      - path: /\.auth/(oauth2.*)
        backend:
          serviceName: browser
          servicePort: hydra-public
      - path: /(\.auth/cookies.*)
        backend:
          serviceName: browser
          servicePort: pascal
      # - path: \/\.auth\/(self-service\/login\/browser.*)
      #   backend:
      #     serviceName: browser
      #     servicePort: pascal