apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-auth
  name: apiserver-proxy
  labels:
    system: Auth
    component: APIServer-Proxy
    environment: Dev
data:
  oathkeeper.yaml: |
    serve:
      proxy:
        port: 4455
      api:
        port: 4456
      prometheus:
        port: 9000
    access_rules:
      repositories:
        - file:///etc/oathkeeper/config/rules.yaml

    authenticators:
      noop:
        enabled: true
      oauth2_introspection:
        enabled: true
        config:
          introspection_url: http://browser.system-auth.svc.cluster.local:4445/oauth2/introspect

    authorizers:
      allow:
        enabled: true

    mutators:
      noop:
        enabled: true

      bearer:
        enabled: true
        config:
          token_from:
            file: "/var/run/secrets/kubernetes.io/serviceaccount/token"

      header:
        enabled: true
        config:
          headers:
            Impersonate-User: '{{ print .Subject }}'

    errors:
      fallback:
        - json
      handlers:
        json:
          enabled: true
          config:
            verbose: true

    log:
      level: debug
      format: text

  rules.yaml: |
    - id: apiserver
      upstream:
        url: https://kubernetes.default.svc.cluster.local
        strip_path: /api/
      match:
        methods: ["GET", "PATCH", "POST", "PUT", "DELETE"]
        url: <http|https>://studio.localhost:4443/api/<.*>
      authenticators:
        - handler: oauth2_introspection
      authorizer:
        handler: allow
      mutators:
        - handler: bearer
        - handler: header
      errors:
        - handler: json

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: system-auth
  name: apiserver-proxy
  labels:
    system: Auth
    component: APIServer-Proxy
    environment: Dev

spec:
  selector:
    matchLabels:
      system: Auth
      component: APIServer-Proxy
      environment: Dev

  replicas: 1

  template:
    metadata:
      labels:
        system: Auth
        component: APIServer-Proxy
        environment: Dev
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000" 
    spec:
      containers:
      - name: oathkeeper
        image: oryd/oathkeeper:dev
        args:
          - "--config"
          - "/etc/oathkeeper/config/oathkeeper.yaml"
          - "serve"
        env:
          - name: SSL_CERT_FILE
            value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        ports:
        - name: proxy
          containerPort: 4455
        - name: metrics
          containerPort: 9000
        volumeMounts:
        - name: config
          mountPath: /etc/oathkeeper/config
      volumes:
      - name: config
        configMap:
          name: apiserver-proxy
      serviceAccountName: apiserver-proxy

---

kind: Service
apiVersion: v1
metadata:
  namespace: system-auth
  name: auth-dev-apiserver-proxy
spec:
  selector:
    system: auth
    component: apiserver-proxy
  ports:
    - port: 80
      name: http
      targetPort: proxy

---

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   namespace: system-auth
#   name: apiserver-proxy
# spec:
#   rules:
#   - host: localhost
#     http:
#       paths:
#       - path: /api
#         backend:
#           serviceName: auth-dev-apiserver-proxy
#           servicePort: 80
