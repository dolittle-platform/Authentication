apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: system-auth
  name: apiserver-proxy

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: impersonator
rules:
- apiGroups: [""]
  resources: ["users", "groups"]
  verbs: ["impersonate"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: apiserver-proxy-impersonator
subjects:
- kind: ServiceAccount
  name: apiserver-proxy
  namespace: system-auth
roleRef:
  kind: ClusterRole
  name: impersonator
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-auth
  name: apiserver-proxy
  labels:
    system: auth
    component: apiserver-proxy
data:
  impersonator.yaml: |
    serve:
      proxy:
        port: 8080
        path_prefix: /
      metrics:
        port: 9700

    identities:
      headers:
        user_id: User-ID
        tenant_id: Tenant-ID

    proxy:
      url: https://kubernetes.default.svc.cluster.local
      token_path: /var/run/secrets/kubernetes.io/serviceaccount/token
      ca_path: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: system-auth
  name: apiserver-proxy
  labels:
    system: auth
    component: apiserver-proxy
spec:
  selector:
    matchLabels:
      system: auth
      component: apiserver-proxy
  replicas: 1
  template:
    metadata:
      labels:
        system: auth
        component: apiserver-proxy
    spec:
      containers:
      - name: impersonator
        image: dolittle/impersonator:local
        args:
          - "--config"
          - "/etc/impersonator/config/impersonator.yaml"
          - "serve"
        volumeMounts:
          - name: config
            mountPath: /etc/impersonator/config
        ports:
        - name: proxy
          containerPort: 8080
      volumes:
      - name: config
        configMap:
          name: apiserver-proxy
      serviceAccountName: apiserver-proxy

---
kind: Service
apiVersion: v1
metadata:
  namespace: system-auth
  name: apiserver-proxy
spec:
  selector:
    system: auth
    component: apiserver-proxy
  ports:
    - port: 8080
      name: proxy
      targetPort: proxy

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: system-auth
  name: apiserver-proxy
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "http://studio-proxy.studio.svc.cluster.local/decisions"
    nginx.ingress.kubernetes.io/auth-response-headers: Tenant-ID, User-ID
spec:
  rules:
  - host: studio.localhost
    http:
      paths:
      - path: /api
        backend:
          serviceName: apiserver-proxy
          servicePort: proxy
