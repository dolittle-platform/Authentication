apiVersion: v1
kind: Secret
metadata:
  namespace: system-auth
  name: postgresql
data:
  POSTGRES_PASSWORD: cGFzc3dvcmQ=

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-auth
  name: postgresql-databases
data:
  init-hydra-browser-db.sql:
    CREATE DATABASE hydra_browser
      WITH
        OWNER = postgres
        ENCODING = 'UTF8'
        LC_COLLATE = 'en_US.utf8'
        LC_CTYPE = 'en_US.utf8'
        TABLESPACE = pg_default
        CONNECTION LIMIT = -1;
  init-kratos-db.sql:
    CREATE DATABASE kratos
      WITH
        OWNER = postgres
        ENCODING = 'UTF8'
        LC_COLLATE = 'en_US.utf8'
        LC_CTYPE = 'en_US.utf8'
        TABLESPACE = pg_default
        CONNECTION LIMIT = -1;

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: system-auth
  name: postgresql-pgadmin
data:
  PGADMIN_DEFAULT_EMAIL: postgres@dolittle.com
  PGADMIN_DEFAULT_PASSWORD: password
  servers.json: |
    {
      "Servers": {
        "localhost": {
            "Name": "Localhost",
            "Group": "Server Group",
            "Port": 5432,
            "Username": "postgres",
            "Host": "localhost",
            "SSLMode": "prefer",
            "MaintenanceDB": "postgres"
        }
      }
    }

---
apiVersion: v1
kind: Service
metadata:
  namespace: system-auth
  name:  postgresql
spec:
  selector:
    system: auth
    component: postgresql
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: system-auth
  name: postgresql
spec:
  selector:
    matchLabels:
      system: auth
      component: postgresql
  serviceName: postgresql
  replicas: 1
  template:
    metadata:
      labels:
        system: auth
        component: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:9.6.19
        envFrom:
          - secretRef:
              name: postgresql
        ports:
        - name: postgresql
          containerPort: 5432
        volumeMounts:
        - name: databases
          mountPath: /docker-entrypoint-initdb.d
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
      - name: pgadmin
        image: dpage/pgadmin4:4.27
        envFrom:
          - configMapRef:
              name: postgresql-pgadmin
        volumeMounts:
          - mountPath: /pgadmin4/servers.json
            subPath: servers.json
            name: pgadmin
        ports:
          - name: admin
            containerPort: 80
      volumes:
        - name: databases
          configMap:
            name: postgresql-databases
        - name: pgadmin
          configMap:
            name: postgresql-pgadmin
  volumeClaimTemplates:
    - metadata:
        name: postgresql-storage
      spec:
        accessModes:
         - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
