apiVersion: v1
kind: Namespace
metadata:
  name: studio

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: studio
  namespace: studio
spec:
  selector:
    matchLabels:
      application: studio
  replicas: 1
  template:
    metadata:
      labels:
        application: studio
    spec:
      containers:
      - name: head
        image: dolittle/spinner:0.0.0
        ports:
        - containerPort: 80
          name: http

---
apiVersion: v1
kind: Service
metadata:
  namespace: studio
  name: studio
spec:
  selector:
    application: studio
  ports:
    - port: 80
      name: http
      targetPort: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: studio
  name: studio-proxy
data:
  oathkeeper.yaml: |
    serve:
      proxy:
        port: 4455
      api:
        port: 4456

    access_rules:
      repositories:
        - file:///etc/oathkeeper/config/rules.yaml

    errors:
      fallback:
        - json
      handlers:
        json:
          enabled: true
          config:
            verbose: true
        redirect:
          enabled: true
          config:
            to: http://studio.localhost:8080/

    authenticators:
      oauth2_introspection:
        enabled: true
        config:
          introspection_url: http://browser.system-auth.svc.cluster.local:4445/oauth2/introspect
          token_from:
            cookie: .dolittle.pascal.login

    authorizers:
      allow:
        enabled: true

    mutators:
      noop:
        enabled: true
      header:
        enabled: true
        config:
          headers:
            User-ID: '{{ print .Subject }}'
            Tenant-ID: '{{ print .Extra.Tenant }}'

    log:
      level: debug
      format: text

  rules.yaml: |
    - id: decision
      match:
        methods: ["GET"]
        url: http://studio-proxy.studio.svc.cluster.local
      authenticators:
        - handler: oauth2_introspection
      authorizer:
        handler: allow
      mutators:
       - handler: header

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: studio
  name: studio-proxy
spec:
  selector:
    matchLabels:
      system: auth
      component: studio-proxy
  replicas: 1
  template:
    metadata:
      labels:
        system: auth
        component: studio-proxy
    spec:
      containers:
      - name: oathkeeper
        image: oryd/oathkeeper:v0.38.4-beta.1
        args:
          - "--config"
          - "/etc/oathkeeper/config/oathkeeper.yaml"
          - "serve"
        ports:
        - name: oath-proxy
          containerPort: 4455
        - name: oath-api
          containerPort: 4456
        volumeMounts:
        - name: config
          mountPath: /etc/oathkeeper/config
      volumes:
      - name: config
        configMap:
          name: studio-proxy

---
kind: Service
apiVersion: v1
metadata:
  namespace: studio
  name: studio-proxy
spec:
  selector:
    system: auth
    component: studio-proxy
  ports:
    - port: 80
      name: http
      targetPort: oath-api

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: studio
  name: studio-proxy
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "http://studio-proxy.studio.svc.cluster.local/decisions"
    nginx.ingress.kubernetes.io/auth-signin: "http://studio.localhost:8080/.auth/cookies/initiate"
    nginx.ingress.kubernetes.io/auth-response-headers: Tenant-ID, User-ID
spec:
  rules:
  - host: studio.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: studio
          servicePort: 80
