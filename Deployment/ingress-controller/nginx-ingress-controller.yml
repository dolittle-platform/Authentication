---
apiVersion: v1
kind: Namespace
metadata:
  name: system-ingress

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: system-ingress
data:
  client-header-buffer-size: "1M"
  http2-max-header-size: "1M"
  proxy-buffer-size: "1M"
  proxy-buffers-number: "4"
  proxy-body-size: "5M"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: system-ingress

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: udp-services
  namespace: system-ingress

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx
  namespace: system-ingress

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nginx-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx
  namespace: system-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress
subjects:
  - kind: ServiceAccount
    name: nginx
    namespace: system-ingress

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx
  namespace: system-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx
subjects:
  - kind: ServiceAccount
    name: nginx
    namespace: system-ingress

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: system-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      system: ingress
      component: nginx
  template:
    metadata:
      labels:
        system: ingress
        component: nginx
    spec:
      serviceAccountName: nginx
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
          args:
            - /nginx-ingress-controller
            - --configmap=system-ingress/nginx
            - --tcp-services-configmap=system-ingress/tcp-services
            - --udp-services-configmap=system-ingress/udp-services
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80

---
kind: Service
apiVersion: v1
metadata:
  namespace: system-ingress
  name: http
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    system: ingress
    component: nginx
  ports:
    - name: http
      port: 8080
      targetPort: http
