version: '3.8'
volumes:
  postgres_data:
services:
  postgres:
    image: postgres:9.6.19
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - './postgres/init-hydra-browser-db.sql:/docker-entrypoint-initdb.d/init-hydra-browser-db.sql'
      - './postgres/init-kratos-db.sql:/docker-entrypoint-initdb.d/init-kratos-db.sql'
      - 'postgres_data:/var/lib/postgresql/data'
    logging:
      driver: none
  pgadmin:
    image: dpage/pgadmin4:4.27
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@dolittle.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - './postgres/servers.json:/pgadmin4/servers.json'
    ports:
      - '9999:80'
    logging:
      driver: none

  ingress-nginx:
    image: nginx:1.21.3
    volumes:
      - './ingress/nginx.conf:/etc/nginx/nginx.conf'
      - './ingress/certificate.crt:/etc/nginx/certificate.crt'
      - './ingress/certificate.key:/etc/nginx/certificate.key'
    ports:
      - '8080:8080'
      - '8081:8081'

  authenticator-oathkeeper:
    image: oryd/oathkeeper:v0.38.15
    command:
      - "--config"
      - "/etc/oathkeeper/config/oathkeeper.yaml"
      - "serve"
    volumes:
      - './authenticator/oathkeeper.yaml:/etc/oathkeeper/config/oathkeeper.yaml'
      - './authenticator/rules.yaml:/etc/oathkeeper/config/rules.yaml'
    ports:
      - '4455:4455'

  browser-hydra-init:
    image: oryd/hydra:v1.10.6
    restart: on-failure
    command:
      - "--config"
      - "/etc/hydra/config/hydra.yaml"
      - "migrate"
      - "sql"
      - "-e"
      - "--yes"
    volumes:
      - './browser/hydra.yaml:/etc/hydra/config/hydra.yaml'
    logging:
      driver: none
  browser-hydra:
    image: oryd/hydra:v1.10.6
    restart: unless-stopped
    depends_on:
      - browser-hydra-init
    command:
      - "--config"
      - "/etc/hydra/config/hydra.yaml"
      - "serve"
      - "all"
      - "--dangerous-force-http"
    volumes:
      - './browser/hydra.yaml:/etc/hydra/config/hydra.yaml'
    ports:
      - '4444:4444'
      - '4445:4445'
  browser-pascal:
    image: dolittle/pascal:local
    build:
      context: ../../Source/Pascal
    depends_on:
      - ingress-nginx
    command:
      - "--config"
      - "/etc/pascal/config/pascal.yaml"
      - "serve"
    volumes:
      - './browser/pascal.yaml:/etc/pascal/config/pascal.yaml'
      - './ingress/certificate.crt:/etc/ssl/certs/ca-certificates.crt'
    links:
      - "ingress-nginx:studio.localhost"
    ports:
      - "9080:8080"

  users-kratos-init:
    image: oryd/kratos:v0.5.4
    restart: on-failure
    command:
      - "--config"
      - "/etc/kratos/config/kratos.yaml"
      - "migrate"
      - "sql"
      - "-e"
      - "--yes"
    volumes:
      - './users/kratos.yaml:/etc/kratos/config/kratos.yaml'
    logging:
      driver: none
  users-kratos:
    image: oryd/kratos:v0.5.4
    restart: unless-stopped
    depends_on:
      - users-kratos-init
      - ingress-nginx
    command:
      - "--config"
      - "/etc/kratos/config/kratos.yaml"
      - "serve"
    volumes:
      - './users/kratos.yaml:/etc/kratos/config/kratos.yaml'
      - './users/identity.schema.json:/etc/kratos/config/identity.schema.json'
      - './users/sample.mapper.jsonnet:/etc/kratos/config/sample.mapper.jsonnet'
      - './ingress/certificate.crt:/etc/ssl/certs/ca-certificates.crt'
    links:
      - "ingress-nginx:provider.localhost"
    ports:
      - '4433:4433'
      - '4434:4434'
  users-login:
    image: dolittle/login:local
    build:
      context: ../../Source/Login
    ports:
      - '9081:8080'
    command:
      - "--config"
      - "/etc/login/config/login.yaml"
      - "serve"
    volumes:
      - './users/login.yaml:/etc/login/config/login.yaml'

  provider:
    image: qlik/simple-oidc-provider
    environment:
      CONFIG_FILE: /etc/simple-oidc-provider/config/config.json
      USERS_FILE: /etc/simple-oidc-provider/config/users.json
    volumes:
      - './provider/config.json:/etc/simple-oidc-provider/config/config.json'
      - './provider/users.json:/etc/simple-oidc-provider/config/users.json'
    ports:
      - '9082:8080'

  studio:
    image: dolittle/spinner:0.0.0
    ports:
      - '8765:80'
